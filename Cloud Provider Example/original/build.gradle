//defaultTasks 'clean', 'downloadJar', 'run'
defaultTasks 'run'

def FOAM_JAR = "foam-minimal.jar"
def FOAM_DOWNLOAD_ADDRESS = "http://india.ms.mff.cuni.cz/hudson/view/foam-tool/job/foam-tool/lastSuccessfulBuild/artifact/release/distribution/$FOAM_JAR"

task createWrapper(type: Wrapper) {
	gradleVersion = '2.3'
}

task downloadJar << {
	// download jar from build server
	def f = new File(FOAM_JAR)
	if (!f.exists()) {
		new URL(FOAM_DOWNLOAD_ADDRESS).withInputStream{ i -> f.withOutputStream{ it << i }}
	}	
}

subprojects { p ->
	
	def isErrorProject = p.toString().contains("error")
	def UCS = isErrorProject ? "ucs-tmp" : "ucs"
	def TADL = "../../tadl-shared"
	def OUT = "out"

	task prepareUcs << {
		// copy use cases with error over the correct ones
		delete "ucs-tmp"
		file("ucs-tmp").mkdirs()
		
		copy {
			from "../system-correct/ucs"
			into "ucs-tmp"
		}		
		copy {
			from "ucs"
			into "ucs-tmp"
			include '**/*.uc'
		}		
	}

	task run(type: Exec) {
		inputs.dir UCS
		inputs.dir TADL
		outputs.dir OUT

		commandLine 'java', '-jar', "../../$FOAM_JAR",'ReportApplication', '-i', UCS, '-t', TADL, '-o', OUT
		//commandLine 'echo', "$UCS"
		ignoreExitValue true		
	}

	// each error project depends on prepareUcs
	if (isErrorProject) {
		run.dependsOn prepareUcs	
	}
	
	task clean << {
		delete OUT
		if (isErrorProject) {
			delete UCS
		}
	}
}
